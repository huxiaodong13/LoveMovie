package com.love.movie.model;

import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class CommentExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public CommentExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		protected void addCriterionForJDBCDate(String condition, Date value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value.getTime()), property);
		}

		protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
			if (values == null || values.size() == 0) {
				throw new RuntimeException("Value list for " + property + " cannot be null or empty");
			}
			List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
			Iterator<Date> iter = values.iterator();
			while (iter.hasNext()) {
				dateList.add(new java.sql.Date(iter.next().getTime()));
			}
			addCriterion(condition, dateList, property);
		}

		protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
		}

		public Criteria andCidIsNull() {
			addCriterion("cid is null");
			return (Criteria) this;
		}

		public Criteria andCidIsNotNull() {
			addCriterion("cid is not null");
			return (Criteria) this;
		}

		public Criteria andCidEqualTo(Integer value) {
			addCriterion("cid =", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotEqualTo(Integer value) {
			addCriterion("cid <>", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThan(Integer value) {
			addCriterion("cid >", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThanOrEqualTo(Integer value) {
			addCriterion("cid >=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThan(Integer value) {
			addCriterion("cid <", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThanOrEqualTo(Integer value) {
			addCriterion("cid <=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidIn(List<Integer> values) {
			addCriterion("cid in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotIn(List<Integer> values) {
			addCriterion("cid not in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidBetween(Integer value1, Integer value2) {
			addCriterion("cid between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotBetween(Integer value1, Integer value2) {
			addCriterion("cid not between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andMidIsNull() {
			addCriterion("mid is null");
			return (Criteria) this;
		}

		public Criteria andMidIsNotNull() {
			addCriterion("mid is not null");
			return (Criteria) this;
		}

		public Criteria andMidEqualTo(Integer value) {
			addCriterion("mid =", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotEqualTo(Integer value) {
			addCriterion("mid <>", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThan(Integer value) {
			addCriterion("mid >", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidGreaterThanOrEqualTo(Integer value) {
			addCriterion("mid >=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThan(Integer value) {
			addCriterion("mid <", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidLessThanOrEqualTo(Integer value) {
			addCriterion("mid <=", value, "mid");
			return (Criteria) this;
		}

		public Criteria andMidIn(List<Integer> values) {
			addCriterion("mid in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotIn(List<Integer> values) {
			addCriterion("mid not in", values, "mid");
			return (Criteria) this;
		}

		public Criteria andMidBetween(Integer value1, Integer value2) {
			addCriterion("mid between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andMidNotBetween(Integer value1, Integer value2) {
			addCriterion("mid not between", value1, value2, "mid");
			return (Criteria) this;
		}

		public Criteria andCdateIsNull() {
			addCriterion("cdate is null");
			return (Criteria) this;
		}

		public Criteria andCdateIsNotNull() {
			addCriterion("cdate is not null");
			return (Criteria) this;
		}

		public Criteria andCdateEqualTo(Date value) {
			addCriterionForJDBCDate("cdate =", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotEqualTo(Date value) {
			addCriterionForJDBCDate("cdate <>", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateGreaterThan(Date value) {
			addCriterionForJDBCDate("cdate >", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateGreaterThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("cdate >=", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateLessThan(Date value) {
			addCriterionForJDBCDate("cdate <", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateLessThanOrEqualTo(Date value) {
			addCriterionForJDBCDate("cdate <=", value, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateIn(List<Date> values) {
			addCriterionForJDBCDate("cdate in", values, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotIn(List<Date> values) {
			addCriterionForJDBCDate("cdate not in", values, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("cdate between", value1, value2, "cdate");
			return (Criteria) this;
		}

		public Criteria andCdateNotBetween(Date value1, Date value2) {
			addCriterionForJDBCDate("cdate not between", value1, value2, "cdate");
			return (Criteria) this;
		}

		public Criteria andClikeIsNull() {
			addCriterion("clike is null");
			return (Criteria) this;
		}

		public Criteria andClikeIsNotNull() {
			addCriterion("clike is not null");
			return (Criteria) this;
		}

		public Criteria andClikeEqualTo(Integer value) {
			addCriterion("clike =", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeNotEqualTo(Integer value) {
			addCriterion("clike <>", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeGreaterThan(Integer value) {
			addCriterion("clike >", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeGreaterThanOrEqualTo(Integer value) {
			addCriterion("clike >=", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeLessThan(Integer value) {
			addCriterion("clike <", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeLessThanOrEqualTo(Integer value) {
			addCriterion("clike <=", value, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeIn(List<Integer> values) {
			addCriterion("clike in", values, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeNotIn(List<Integer> values) {
			addCriterion("clike not in", values, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeBetween(Integer value1, Integer value2) {
			addCriterion("clike between", value1, value2, "clike");
			return (Criteria) this;
		}

		public Criteria andClikeNotBetween(Integer value1, Integer value2) {
			addCriterion("clike not between", value1, value2, "clike");
			return (Criteria) this;
		}

		public Criteria andReportIsNull() {
			addCriterion("report is null");
			return (Criteria) this;
		}

		public Criteria andReportIsNotNull() {
			addCriterion("report is not null");
			return (Criteria) this;
		}

		public Criteria andReportEqualTo(Integer value) {
			addCriterion("report =", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportNotEqualTo(Integer value) {
			addCriterion("report <>", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportGreaterThan(Integer value) {
			addCriterion("report >", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportGreaterThanOrEqualTo(Integer value) {
			addCriterion("report >=", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportLessThan(Integer value) {
			addCriterion("report <", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportLessThanOrEqualTo(Integer value) {
			addCriterion("report <=", value, "report");
			return (Criteria) this;
		}

		public Criteria andReportIn(List<Integer> values) {
			addCriterion("report in", values, "report");
			return (Criteria) this;
		}

		public Criteria andReportNotIn(List<Integer> values) {
			addCriterion("report not in", values, "report");
			return (Criteria) this;
		}

		public Criteria andReportBetween(Integer value1, Integer value2) {
			addCriterion("report between", value1, value2, "report");
			return (Criteria) this;
		}

		public Criteria andReportNotBetween(Integer value1, Integer value2) {
			addCriterion("report not between", value1, value2, "report");
			return (Criteria) this;
		}

		public Criteria andCtitleIsNull() {
			addCriterion("ctitle is null");
			return (Criteria) this;
		}

		public Criteria andCtitleIsNotNull() {
			addCriterion("ctitle is not null");
			return (Criteria) this;
		}

		public Criteria andCtitleEqualTo(String value) {
			addCriterion("ctitle =", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleNotEqualTo(String value) {
			addCriterion("ctitle <>", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleGreaterThan(String value) {
			addCriterion("ctitle >", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleGreaterThanOrEqualTo(String value) {
			addCriterion("ctitle >=", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleLessThan(String value) {
			addCriterion("ctitle <", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleLessThanOrEqualTo(String value) {
			addCriterion("ctitle <=", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleLike(String value) {
			addCriterion("ctitle like", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleNotLike(String value) {
			addCriterion("ctitle not like", value, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleIn(List<String> values) {
			addCriterion("ctitle in", values, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleNotIn(List<String> values) {
			addCriterion("ctitle not in", values, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleBetween(String value1, String value2) {
			addCriterion("ctitle between", value1, value2, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCtitleNotBetween(String value1, String value2) {
			addCriterion("ctitle not between", value1, value2, "ctitle");
			return (Criteria) this;
		}

		public Criteria andCscoreIsNull() {
			addCriterion("cscore is null");
			return (Criteria) this;
		}

		public Criteria andCscoreIsNotNull() {
			addCriterion("cscore is not null");
			return (Criteria) this;
		}

		public Criteria andCscoreEqualTo(Integer value) {
			addCriterion("cscore =", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreNotEqualTo(Integer value) {
			addCriterion("cscore <>", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreGreaterThan(Integer value) {
			addCriterion("cscore >", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreGreaterThanOrEqualTo(Integer value) {
			addCriterion("cscore >=", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreLessThan(Integer value) {
			addCriterion("cscore <", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreLessThanOrEqualTo(Integer value) {
			addCriterion("cscore <=", value, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreIn(List<Integer> values) {
			addCriterion("cscore in", values, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreNotIn(List<Integer> values) {
			addCriterion("cscore not in", values, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreBetween(Integer value1, Integer value2) {
			addCriterion("cscore between", value1, value2, "cscore");
			return (Criteria) this;
		}

		public Criteria andCscoreNotBetween(Integer value1, Integer value2) {
			addCriterion("cscore not between", value1, value2, "cscore");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table comment
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table comment
     *
     * @mbg.generated do_not_delete_during_merge Wed Jun 19 18:53:06 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}