package com.love.movie.model;

import java.util.ArrayList;
import java.util.List;

public class ReplyExample {
    /**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected String orderByClause;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected boolean distinct;
	/**
	 * This field was generated by MyBatis Generator. This field corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected List<Criteria> oredCriteria;

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public ReplyExample() {
		oredCriteria = new ArrayList<Criteria>();
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void setOrderByClause(String orderByClause) {
		this.orderByClause = orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public String getOrderByClause() {
		return orderByClause;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void setDistinct(boolean distinct) {
		this.distinct = distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public boolean isDistinct() {
		return distinct;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public List<Criteria> getOredCriteria() {
		return oredCriteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void or(Criteria criteria) {
		oredCriteria.add(criteria);
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public Criteria or() {
		Criteria criteria = createCriteriaInternal();
		oredCriteria.add(criteria);
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public Criteria createCriteria() {
		Criteria criteria = createCriteriaInternal();
		if (oredCriteria.size() == 0) {
			oredCriteria.add(criteria);
		}
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected Criteria createCriteriaInternal() {
		Criteria criteria = new Criteria();
		return criteria;
	}

	/**
	 * This method was generated by MyBatis Generator. This method corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public void clear() {
		oredCriteria.clear();
		orderByClause = null;
		distinct = false;
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	protected abstract static class GeneratedCriteria {
		protected List<Criterion> criteria;

		protected GeneratedCriteria() {
			super();
			criteria = new ArrayList<Criterion>();
		}

		public boolean isValid() {
			return criteria.size() > 0;
		}

		public List<Criterion> getAllCriteria() {
			return criteria;
		}

		public List<Criterion> getCriteria() {
			return criteria;
		}

		protected void addCriterion(String condition) {
			if (condition == null) {
				throw new RuntimeException("Value for condition cannot be null");
			}
			criteria.add(new Criterion(condition));
		}

		protected void addCriterion(String condition, Object value, String property) {
			if (value == null) {
				throw new RuntimeException("Value for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value));
		}

		protected void addCriterion(String condition, Object value1, Object value2, String property) {
			if (value1 == null || value2 == null) {
				throw new RuntimeException("Between values for " + property + " cannot be null");
			}
			criteria.add(new Criterion(condition, value1, value2));
		}

		public Criteria andRidIsNull() {
			addCriterion("rid is null");
			return (Criteria) this;
		}

		public Criteria andRidIsNotNull() {
			addCriterion("rid is not null");
			return (Criteria) this;
		}

		public Criteria andRidEqualTo(Integer value) {
			addCriterion("rid =", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotEqualTo(Integer value) {
			addCriterion("rid <>", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidGreaterThan(Integer value) {
			addCriterion("rid >", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidGreaterThanOrEqualTo(Integer value) {
			addCriterion("rid >=", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidLessThan(Integer value) {
			addCriterion("rid <", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidLessThanOrEqualTo(Integer value) {
			addCriterion("rid <=", value, "rid");
			return (Criteria) this;
		}

		public Criteria andRidIn(List<Integer> values) {
			addCriterion("rid in", values, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotIn(List<Integer> values) {
			addCriterion("rid not in", values, "rid");
			return (Criteria) this;
		}

		public Criteria andRidBetween(Integer value1, Integer value2) {
			addCriterion("rid between", value1, value2, "rid");
			return (Criteria) this;
		}

		public Criteria andRidNotBetween(Integer value1, Integer value2) {
			addCriterion("rid not between", value1, value2, "rid");
			return (Criteria) this;
		}

		public Criteria andCidIsNull() {
			addCriterion("cid is null");
			return (Criteria) this;
		}

		public Criteria andCidIsNotNull() {
			addCriterion("cid is not null");
			return (Criteria) this;
		}

		public Criteria andCidEqualTo(Integer value) {
			addCriterion("cid =", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotEqualTo(Integer value) {
			addCriterion("cid <>", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThan(Integer value) {
			addCriterion("cid >", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidGreaterThanOrEqualTo(Integer value) {
			addCriterion("cid >=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThan(Integer value) {
			addCriterion("cid <", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidLessThanOrEqualTo(Integer value) {
			addCriterion("cid <=", value, "cid");
			return (Criteria) this;
		}

		public Criteria andCidIn(List<Integer> values) {
			addCriterion("cid in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotIn(List<Integer> values) {
			addCriterion("cid not in", values, "cid");
			return (Criteria) this;
		}

		public Criteria andCidBetween(Integer value1, Integer value2) {
			addCriterion("cid between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andCidNotBetween(Integer value1, Integer value2) {
			addCriterion("cid not between", value1, value2, "cid");
			return (Criteria) this;
		}

		public Criteria andReplyidIsNull() {
			addCriterion("replyid is null");
			return (Criteria) this;
		}

		public Criteria andReplyidIsNotNull() {
			addCriterion("replyid is not null");
			return (Criteria) this;
		}

		public Criteria andReplyidEqualTo(Integer value) {
			addCriterion("replyid =", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidNotEqualTo(Integer value) {
			addCriterion("replyid <>", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidGreaterThan(Integer value) {
			addCriterion("replyid >", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidGreaterThanOrEqualTo(Integer value) {
			addCriterion("replyid >=", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidLessThan(Integer value) {
			addCriterion("replyid <", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidLessThanOrEqualTo(Integer value) {
			addCriterion("replyid <=", value, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidIn(List<Integer> values) {
			addCriterion("replyid in", values, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidNotIn(List<Integer> values) {
			addCriterion("replyid not in", values, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidBetween(Integer value1, Integer value2) {
			addCriterion("replyid between", value1, value2, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplyidNotBetween(Integer value1, Integer value2) {
			addCriterion("replyid not between", value1, value2, "replyid");
			return (Criteria) this;
		}

		public Criteria andReplytypeIsNull() {
			addCriterion("replytype is null");
			return (Criteria) this;
		}

		public Criteria andReplytypeIsNotNull() {
			addCriterion("replytype is not null");
			return (Criteria) this;
		}

		public Criteria andReplytypeEqualTo(Integer value) {
			addCriterion("replytype =", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeNotEqualTo(Integer value) {
			addCriterion("replytype <>", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeGreaterThan(Integer value) {
			addCriterion("replytype >", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeGreaterThanOrEqualTo(Integer value) {
			addCriterion("replytype >=", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeLessThan(Integer value) {
			addCriterion("replytype <", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeLessThanOrEqualTo(Integer value) {
			addCriterion("replytype <=", value, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeIn(List<Integer> values) {
			addCriterion("replytype in", values, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeNotIn(List<Integer> values) {
			addCriterion("replytype not in", values, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeBetween(Integer value1, Integer value2) {
			addCriterion("replytype between", value1, value2, "replytype");
			return (Criteria) this;
		}

		public Criteria andReplytypeNotBetween(Integer value1, Integer value2) {
			addCriterion("replytype not between", value1, value2, "replytype");
			return (Criteria) this;
		}

		public Criteria andUidIsNull() {
			addCriterion("uid is null");
			return (Criteria) this;
		}

		public Criteria andUidIsNotNull() {
			addCriterion("uid is not null");
			return (Criteria) this;
		}

		public Criteria andUidEqualTo(Integer value) {
			addCriterion("uid =", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotEqualTo(Integer value) {
			addCriterion("uid <>", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThan(Integer value) {
			addCriterion("uid >", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidGreaterThanOrEqualTo(Integer value) {
			addCriterion("uid >=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThan(Integer value) {
			addCriterion("uid <", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidLessThanOrEqualTo(Integer value) {
			addCriterion("uid <=", value, "uid");
			return (Criteria) this;
		}

		public Criteria andUidIn(List<Integer> values) {
			addCriterion("uid in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotIn(List<Integer> values) {
			addCriterion("uid not in", values, "uid");
			return (Criteria) this;
		}

		public Criteria andUidBetween(Integer value1, Integer value2) {
			addCriterion("uid between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andUidNotBetween(Integer value1, Integer value2) {
			addCriterion("uid not between", value1, value2, "uid");
			return (Criteria) this;
		}

		public Criteria andTouidIsNull() {
			addCriterion("touid is null");
			return (Criteria) this;
		}

		public Criteria andTouidIsNotNull() {
			addCriterion("touid is not null");
			return (Criteria) this;
		}

		public Criteria andTouidEqualTo(Integer value) {
			addCriterion("touid =", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidNotEqualTo(Integer value) {
			addCriterion("touid <>", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidGreaterThan(Integer value) {
			addCriterion("touid >", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidGreaterThanOrEqualTo(Integer value) {
			addCriterion("touid >=", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidLessThan(Integer value) {
			addCriterion("touid <", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidLessThanOrEqualTo(Integer value) {
			addCriterion("touid <=", value, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidIn(List<Integer> values) {
			addCriterion("touid in", values, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidNotIn(List<Integer> values) {
			addCriterion("touid not in", values, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidBetween(Integer value1, Integer value2) {
			addCriterion("touid between", value1, value2, "touid");
			return (Criteria) this;
		}

		public Criteria andTouidNotBetween(Integer value1, Integer value2) {
			addCriterion("touid not between", value1, value2, "touid");
			return (Criteria) this;
		}
	}

	/**
	 * This class was generated by MyBatis Generator. This class corresponds to the database table reply
	 * @mbg.generated  Mon Jun 24 19:49:52 CST 2019
	 */
	public static class Criterion {
		private String condition;
		private Object value;
		private Object secondValue;
		private boolean noValue;
		private boolean singleValue;
		private boolean betweenValue;
		private boolean listValue;
		private String typeHandler;

		public String getCondition() {
			return condition;
		}

		public Object getValue() {
			return value;
		}

		public Object getSecondValue() {
			return secondValue;
		}

		public boolean isNoValue() {
			return noValue;
		}

		public boolean isSingleValue() {
			return singleValue;
		}

		public boolean isBetweenValue() {
			return betweenValue;
		}

		public boolean isListValue() {
			return listValue;
		}

		public String getTypeHandler() {
			return typeHandler;
		}

		protected Criterion(String condition) {
			super();
			this.condition = condition;
			this.typeHandler = null;
			this.noValue = true;
		}

		protected Criterion(String condition, Object value, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.typeHandler = typeHandler;
			if (value instanceof List<?>) {
				this.listValue = true;
			} else {
				this.singleValue = true;
			}
		}

		protected Criterion(String condition, Object value) {
			this(condition, value, null);
		}

		protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
			super();
			this.condition = condition;
			this.value = value;
			this.secondValue = secondValue;
			this.typeHandler = typeHandler;
			this.betweenValue = true;
		}

		protected Criterion(String condition, Object value, Object secondValue) {
			this(condition, value, secondValue, null);
		}
	}

	/**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table reply
     *
     * @mbg.generated do_not_delete_during_merge Wed Jun 19 18:53:06 CST 2019
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }
}